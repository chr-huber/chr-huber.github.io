ifelse(context == "abstract", "su_ha_abs", context))),
as.character(treatment))
)
tt_before$prof <- rep(1, nrow(tt_before))
norms_before$prof <- rep(1, nrow(norms_before))
tt_profnew$prof <- rep(1, nrow(tt_profnew))
norms_profnew$prof <- rep(1, nrow(norms_profnew))
tt_stud$prof <- rep(0, nrow(tt_stud))
norms_stud$prof <- rep(0, nrow(norms_stud))
norms_studprof$prof <- rep(2, nrow(norms_studprof))
tt_pf$prof <- rep(3, nrow(tt_pf))
tt_before$prof1 <- rep(1, nrow(tt_before))
norms_before$prof1 <- rep(1, nrow(norms_before))
tt_profnew$prof1 <- rep(1, nrow(tt_profnew))
norms_profnew$prof1 <- rep(1, nrow(norms_profnew))
tt_stud$prof1 <- rep(0, nrow(tt_stud))
norms_stud$prof1 <- rep(0, nrow(norms_stud))
norms_studprof$prof1 <- rep(0, nrow(norms_studprof))
tt_pf$prof1 <- rep(1, nrow(tt_pf))
tt_stud <- tt_stud %>%
mutate(
treatment = ifelse(is.na(treatment),
ifelse(context == "financial", "sh_sev_fin",
ifelse(context == "neutral", "su_ha_neu",
ifelse(context == "abstract", "su_ha_abs",
context))),
as.character(treatment))
)
tt_stud$treatment <- factor(tt_stud$treatment)
tt <- rbind(tt_before, tt_stud, tt_pf)
norms <- rbind(norms_before, norms_profnew, norms_stud, norms_studprof)
tt <- tt %>%
mutate(
treatment = ifelse(is.na(treatment),
ifelse(context == "financial", "sh_sev_fin",
ifelse(context == "neutral", "su_ha_neu",
ifelse(context == "abstract", "su_ha_abs", context))),
as.character(treatment))
)
tt$treatment <- factor(tt$treatment)
norms <- norms %>%
mutate(
treatment = ifelse(context == "financial", "sh_sev_fin",
ifelse(context == "neutral", "su_ha_neu",
ifelse(context == "abstract", "su_ha_abs", context))),
treatment)
norms$treatment <- factor(norms$treatment)
save(tt, file = "RData/_tt.RData")
save(norms, file = "RData/_norms.RData")
reshaped <- tt %>%
gather(cost, choice, choice1:choice5, belief1:belief5)
reshaped <- reshaped %>%
extract(cost, c("question", "cost"), "(choice|belief)(.)")
reshaped <- reshaped %>%
spread(question, choice)
reshaped$belief <- reshaped$belief/100
reshaped$cost <- as.numeric(reshaped$cost) * (-1) + 5
save(reshaped, file = "RData/_reshaped.RData")
reshaped_norms <- norms %>%
select(-norms_false, -norms_true) %>%
gather(cost, choice, norms_true1:norms_false5, norms_false1:norms_false5, belief1:belief5)
reshaped_norms <- reshaped_norms %>%
extract(cost, c("question", "cost"), "(norms_false|norms_true|belief)(.)")
reshaped_norms <- reshaped_norms %>%
spread(question, choice) %>%
mutate(norms = (norms_true + norms_false)/2)
reshaped_norms$belief <- reshaped_norms$belief/100
reshaped_norms$cost <- as.numeric(reshaped_norms$cost) * (-1) + 5
save(reshaped_norms, file = "RData/_reshaped_norms.RData")
merge <- merge(reshaped,
reshaped_norms %>%
group_by(prof, treatment, cost) %>%
summarise(norms_false = mean(norms_false),
norms_true = mean(norms_true),
norms_belief = mean(belief),
prof1 = mean(prof1)),
by=c("prof1", "treatment", "cost"), all=TRUE)
merge <- merge %>% mutate(norm = ifelse(choice==0, norms_true, norms_false))
save(merge, file = "RData/_merge.RData")
tt %>%
group_by(prof) %>%
summarise(n())
tt %>%
group_by(prof1) %>%
summarise(n())
norms %>%
group_by(prof) %>%
summarise(n())
install.packages("xaringan")
install.packages("xaringan")
library(xaringan)
library(tidyverse)
library(viridis)
pos <- read.csv("../../02_ReturnDistribution/quarterly2.csv")
View(pos)
pos <- read.csv("../../02_ReturnDistribution/quarterly2.csv", sep=";")
View(pos)
View(pos)
source('C:/Users/chrhu/Dropbox/2019_FinAdvice_IRRM/07_Presentations/Pres_202002_EF/extrafigs.R', echo=TRUE)
pos %>%
ggplot(
aes(x = id, y = logreturn)
) +
geom_col()
pos %>%
ggplot(
aes(x = id, y = logreturn)
) +
geom_col() +
theme_bw()
pos %>%
mutate(return = logreturn = 100) %>%
ggplot(
aes(x = id, y = return)
) +
geom_col() +
theme_bw() +
labs(x="Quarter",
y="Return") +
pos %>%
mutate(return = logreturn = 100) %>%
ggplot(
aes(x = id, y = return)
) +
geom_col() +
theme_bw() +
labs(x="Quarter",
y="Return")
pos %>%
mutate(return = logreturn = 100)
pos %>%
mutate(return = logreturn * 100) %>%
ggplot(
aes(x = id, y = return)
) +
geom_col() +
theme_bw() +
labs(x="Quarter",
y="Return")
pos %>%
mutate(return = logreturn * 100) %>%
ggplot(
aes(x = id, y = return)
) +
geom_col() +
theme_bw() +
labs(x="Quarter",
y="Return in %")
pos %>%
mutate(return = logreturn * 100) %>%
ggplot(
aes(x = id, y = return)
) +
geom_col() +
theme_bw(ase_size = 18) +
labs(x="Quarter",
y="Return in %")
pos %>%
mutate(return = logreturn * 100) %>%
ggplot(
aes(x = id, y = return)
) +
geom_col() +
theme_bw(base_size = 18) +
labs(x="Quarter",
y="Return in %")
pos %>%
mutate(return = logreturn * 100) %>%
ggplot(
aes(x = id, y = return)
) +
geom_col() +
theme_bw(base_size = 18) +
labs(x="Quarter",
y="Return in %") +
scale_color_manual(values = viridis(3))
pos %>%
mutate(return = logreturn * 100) %>%
ggplot(
aes(x = id, y = return)
) +
geom_col() +
theme_bw(base_size = 18) +
labs(x="Quarter",
y="Return in %") +
scale_color_manual(values = viridis(1))
pos %>%
mutate(return = logreturn * 100) %>%
ggplot(
aes(x = id, y = return)
) +
geom_col() +
theme_bw(base_size = 18) +
labs(x="Quarter",
y="Return in %")
pos %>%
mutate(return = logreturn * 100) %>%
ggplot(
aes(x = id, y = return)
) +
geom_col() +
theme_bw(base_size = 18) +
labs(x="Quarter",
y="Return in %") +
scale_y_continuous(limits = c(-5, 20), breaks=seq(-5, 20, 5))
pos %>%
mutate(return = logreturn * 100) %>%
ggplot(
aes(x = id, y = return)
) +
geom_col() +
theme_bw(base_size = 18,
panel.grid.minor.x = element_blank()) +
) +
labs(x="Quarter",
y="Return in %") +
scale_y_continuous(limits = c(-5, 20), breaks=seq(-5, 20, 5))
pos %>%
mutate(return = logreturn * 100) %>%
ggplot(
aes(x = id, y = return)
) +
geom_col() +
theme_bw(base_size = 18,
panel.grid.minor.x = element_blank()
) +
labs(x="Quarter",
y="Return in %") +
scale_y_continuous(limits = c(-5, 20), breaks=seq(-5, 20, 5))
pos %>%
mutate(return = logreturn * 100) %>%
ggplot(
aes(x = id, y = return)
) +
geom_col() +
theme_bw(base_size = 18) +
theme(panel.grid.minor.x = element_blank()) +
labs(x="Quarter",
y="Return in %") +
scale_y_continuous(limits = c(-5, 20), breaks=seq(-5, 20, 5))
ggsave("PosReturns.svg", width=18, height=12, units="cm")
neg <- read.csv("../../02_ReturnDistribution/quarterly1.csv", sep=";")
neg %>%
mutate(return = logreturn * 100) %>%
ggplot(
aes(x = id, y = return)
) +
geom_col() +
theme_bw(base_size = 18) +
theme(panel.grid.minor.x = element_blank()) +
labs(x="Quarter",
y="Return in %") +
scale_y_continuous(limits = c(-5, 20), breaks=seq(-5, 20, 5))
neg %>%
mutate(return = logreturn * 100) %>%
ggplot(
aes(x = id, y = return)
) +
geom_col() +
theme_bw(base_size = 18) +
theme(panel.grid.minor.x = element_blank()) +
labs(x="Quarter",
y="Return in %") +
scale_y_continuous(limits = c(-20, 5), breaks=seq(-20, 5, 5))
ggsave("NegReturns.svg", width=18, height=12, units="cm")
payouts <- data.frame(
investment = c(1:100)
)
View(payouts)
payouts <- data.frame(
investment = c(1:100),
fixed = 5000
)
View(payouts)
payouts <- data.frame(
investment = c(1:100),
fixed = 3000
) %>%
mutate(
linear = 40 * investment
)
View(payouts)
payouts <- data.frame(
investment = c(1:100),
fixed = 3000
) %>%
mutate(
linear = 40 * investment,
tournament = ifelse(investment >= 77, 20 * investment + 8200,
ifelse(investment >= 46, 20 * investment + 4100,
20 * investment))
)
payouts
?gather
stocks <- tibble(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
stocks
gather(stocks, "stock", "price", -time)
payouts %>% gather("incentives", "payout")
payouts %>% gather("incentives", "payout", -investment)
test <- payouts %>% gather("incentives", "payout", -investment)
View(test)
test <- payouts %>% gather("incentives", "payout")
payouts <- data.frame(
investment = c(1:100),
fixed = 3000
) %>%
mutate(
linear = 40 * investment,
tournament = ifelse(investment >= 77, 20 * investment + 8200,
ifelse(investment >= 46, 20 * investment + 4100,
20 * investment))
) %>%
gather("incentives", "payout", -investment)
payouts %>%
ggplot(
aes(x = investment,
y = payout)
) +
geom_line(aes(color = incentives))
theme_bw(base_size = 18) +
theme(panel.grid.minor.x = element_blank()) +
labs(x="Investment",
y="Payoff in Taler (ECU)") +
scale_y_continuous(limits = c(0, 10100), breaks=seq(0, 10000, 2000))
payouts %>%
ggplot(
aes(x = investment,
y = payout)
) +
geom_line(aes(color = incentives))
payouts %>%
ggplot(
aes(x = investment,
y = payout)
) +
geom_line(aes(color = incentives)) +
theme_bw(base_size = 18) +
theme(panel.grid.minor.x = element_blank()) +
labs(x="Investment",
y="Payoff in Taler (ECU)") +
scale_y_continuous(limits = c(0, 10100), breaks=seq(0, 10000, 2000))
payouts %>%
ggplot(
aes(x = investment,
y = payout)
) +
geom_line(aes(color = incentives)) +
theme_bw(base_size = 18) +
theme(panel.grid.minor.x = element_blank()) +
labs(x="Investment",
y="Payoff in Taler (ECU)") +
scale_y_continuous(limits = c(0, 10200), breaks=seq(0, 10000, 2000))
payouts %>%
ggplot(
aes(x = investment,
y = payout)
) +
geom_line(aes(color = incentives)) +
theme_bw(base_size = 18) +
theme(panel.grid.minor.x = element_blank()) +
scale_color_discrete(values = viridis(3)) +
labs(x="Investment",
y="Payoff in Taler (ECU)") +
scale_y_continuous(limits = c(0, 10200), breaks=seq(0, 10000, 2000))
payouts %>%
ggplot(
aes(x = investment,
y = payout)
) +
geom_line(aes(color = incentives)) +
theme_bw(base_size = 18) +
theme(panel.grid.minor.x = element_blank()) +
scale_color_manual(values = viridis(3)) +
labs(x="Investment",
y="Payoff in Taler (ECU)") +
scale_y_continuous(limits = c(0, 10200), breaks=seq(0, 10000, 2000))
payouts %>%
ggplot(
aes(x = investment,
y = payout)
) +
geom_line(aes(color = incentives)) +
theme_bw(base_size = 18) +
theme(panel.grid.minor.x = element_blank()) +
scale_color_manual(guide = FALSE, values = viridis(3)) +
labs(x="Investment",
y="Payoff in Taler (ECU)") +
scale_y_continuous(limits = c(0, 10200), breaks=seq(0, 10000, 2000))
?legend.position
?theme
payouts %>%
ggplot(
aes(x = investment,
y = payout)
) +
geom_line(aes(color = incentives)) +
theme_bw(base_size = 18) +
theme(legend.position = "bottom",
panel.grid.minor.x = element_blank()) +
scale_color_manual(values = viridis(3)) +
labs(x="Investment",
y="Payoff in Taler (ECU)") +
scale_y_continuous(limits = c(0, 10200), breaks=seq(0, 10000, 2000))
payouts %>%
ggplot(
aes(x = investment,
y = payout)
) +
geom_line(aes(color = incentives)) +
theme_bw(base_size = 18) +
theme(legend.position = "bottom",
legend.title = element_blank(),
panel.grid.minor.x = element_blank()) +
scale_color_manual(values = viridis(3)) +
labs(x="Investment",
y="Payoff in Taler (ECU)") +
scale_y_continuous(limits = c(0, 10200), breaks=seq(0, 10000, 2000))
payouts %>%
ggplot(
aes(x = investment,
y = payout)
) +
geom_line(aes(color = incentives)) +
theme_bw(base_size = 18) +
theme(legend.position = "bottom",
legend.title = element_blank(),
panel.grid.minor.x = element_blank()) +
scale_color_manual(values = viridis(3)) +
labs(x="Investment by Investor",
y="Payoff for Advisorin Taler (ECU)") +
scale_y_continuous(limits = c(0, 10200), breaks=seq(0, 10000, 2000))
payouts %>%
ggplot(
aes(x = investment,
y = payout)
) +
geom_line(aes(color = incentives)) +
theme_bw(base_size = 18) +
theme(legend.position = "bottom",
legend.title = element_blank(),
panel.grid.minor.x = element_blank()) +
scale_color_manual(values = viridis(3)) +
labs(x="Investment by Investor",
y="Payoff for Advisor in Taler (ECU)") +
scale_y_continuous(limits = c(0, 10200), breaks=seq(0, 10000, 2000))
ggsave("Incentives.svg", width=18, height=12, units="cm")
payouts %>%
ggplot(
aes(x = investment,
y = payout)
) +
geom_line(aes(color = incentives), size = 2) +
theme_bw(base_size = 18) +
theme(legend.position = "bottom",
legend.title = element_blank(),
panel.grid.minor.x = element_blank()) +
scale_color_manual(values = viridis(3)) +
labs(x="Investment by Investor",
y="Payoff for Advisor in Taler (ECU)") +
scale_y_continuous(limits = c(0, 10200), breaks=seq(0, 10000, 2000))
payouts %>%
ggplot(
aes(x = investment,
y = payout)
) +
geom_line(aes(color = incentives), size = 1.5) +
theme_bw(base_size = 18) +
theme(legend.position = "bottom",
legend.title = element_blank(),
panel.grid.minor.x = element_blank()) +
scale_color_manual(values = viridis(3)) +
labs(x="Investment by Investor",
y="Payoff for Advisor in Taler (ECU)") +
scale_y_continuous(limits = c(0, 10200), breaks=seq(0, 10000, 2000))
payouts %>%
ggplot(
aes(x = investment,
y = payout)
) +
geom_line(aes(color = incentives), size = 1.2) +
theme_bw(base_size = 18) +
theme(legend.position = "bottom",
legend.title = element_blank(),
panel.grid.minor.x = element_blank()) +
scale_color_manual(values = viridis(3)) +
labs(x="Investment by Investor",
y="Payoff for Advisor in Taler (ECU)") +
scale_y_continuous(limits = c(0, 10200), breaks=seq(0, 10000, 2000))
ggsave("figures/Incentives.svg", width=18, height=12, units="cm")
library(haven)
dat <- read_dta("../../04_Data/data_raw_full.dta")
View(dat)
install.packages("pagedown")
library(pagedown)
pagedown::chrome_print("Pres_202002_EF.Rmd")
pagedown::chrome_print("Pres_202002_EF.Rmd")
pagedown::chrome_print("Pres_202002_EF.Rmd")
pagedown::chrome_print("Pres_202002_EF.Rmd")
pagedown::chrome_print("Pres_202002_EF.Rmd")
pagedown::chrome_print("Pres_202002_EF.Rmd")
pagedown::chrome_print("Pres_202002_EF.Rmd")
pagedown::chrome_print("Pres_202002_EF.Rmd")
pagedown::chrome_print("Pres_202002_EF.Rmd")
pagedown::chrome_print("Pres_202002_EF.html")
library(xaringan)
library(pagedown)
pagedown::chrome_print("Pres_202002_EF.html")
